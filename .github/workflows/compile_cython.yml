name: CompileCython
on:
  workflow_call:

jobs:
  build_ladder_binary:
    name: Compile Cython for Ladder

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]

    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry
      # set-up python with cache
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      # Install requirements and build extension
      - name: Install requirements and build extension
        run: |
          poetry install --with dev
      - uses: actions/upload-artifact@v4
        with:
          name: ladder_binary
          path: cython_extensions/bootstrap.cpython-312-x86_64-linux-gnu.so
  build:
    name: Compile Cython
    needs: build_ladder_binary
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12']

    steps:
      - name: Display structure of downloaded files
        run: ls -R .
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry
      # set-up python with cache
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      # create folders here for uploading to github release
      - name: Install requirements and build extension
        run: |
          poetry install --with dev
      # Only download ladder binary for non-linux builds
      - name: Download ladder binary (for Mac/Win only)
        if: matrix.os != 'ubuntu-latest'
        uses: actions/download-artifact@v4
        with:
          name: ladder_binary
          path: cython_extensions
      - name: List cython_extensions contents before zipping
        run: ls -l cython_extensions
        if: runner.os != 'Windows'
      - name: List cython_extensions contents before zipping (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: Get-ChildItem cython_extensions
      - name: Delete unwanted files
        run: |
          find cython_extensions -name "*.c" -print0 | xargs -0 rm -f
        if: matrix.os != 'windows-latest'
      - name: Delete unwanted files windows
        run: |
          Remove-Item -Path .\cython_extensions\*.c -Force
        if: matrix.os == 'windows-latest'
      - name: Debug listing before zipping
        run: ls -l cython_extensions
      - name: Zip Cython extension (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path cython_extensions\* -DestinationPath "${{ matrix.os }}_python${{ matrix.python-version }}.zip"
      - name: Zip Cython extension (Unix)
        if: runner.os != 'Windows'
        run: |
          zip -r ${{ matrix.os }}_python${{ matrix.python-version }}.zip cython_extensions
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}_python${{ matrix.python-version }}
          path: ${{ matrix.os }}_python${{ matrix.python-version }}.zip
