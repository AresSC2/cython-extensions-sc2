name: CompileCython
on:
  workflow_call:

jobs:
  build_ladder_binary:
    name: Compile Cython for Ladder

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]

    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry
      # set-up python with cache
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      # Install requirements and build extension
      - name: Install requirements and build extension
        run: |
          poetry install --with dev
      - uses: actions/upload-artifact@v4
        with:
          name: ladder_binary
          path: |
            cython_extensions/*.so
  build:
    name: Compile Cython
    needs: build_ladder_binary
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12']

    steps:
      - name: Display structure of downloaded files
        run: ls -R .
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry
      # set-up python with cache
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
#      # Install requirements and build extension
#      - name: Install requirements and build extension
#        run: |
#          poetry install --with dev
#      # build a wheel while we are here for later (pipi) and upload artifact
#      - name: Make wheel
#        run: poetry build
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python-version }}
#          path: dist/*.whl
      # create folders here for uploading to github release
      - name: Get linux binary
        uses: actions/download-artifact@v4
        with:
          name: ladder_binary
          path: cython_extensions
      - name: Delete unwanted files
        run: |
          find cython_extensions -name "*.c" -print0 | xargs -0 rm -f
        if: matrix.os != 'windows-latest'
      - name: Delete unwanted files windows
        run: |
          Remove-Item -Path .\cython_extensions\*.c -Force
        if: matrix.os == 'windows-latest'
      - run: mkdir tmp-dir && mv cython_extensions tmp-dir/ && mv tmp-dir cython_extensions
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}_python${{ matrix.python-version }}
          path: |
            cython_extensions
