[tool.poetry]
name = "cython-extensions-sc2"
version = "0.4.6"
description = ""
authors = ["Tom Kerr <tomkerrdev@gmail.com>"]
readme = "README.md"
packages = [{include = "cython_extensions"}]
include = ["cython_extensions/*.so", "cython_extensions/*.pyd"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

[tool.poetry.group.dev.dependencies]
cython = "^3.0.8"
ipykernel = "^6.29.0"
line-profiler = "^4.1.2"
matplotlib = "^3.8.2"
numpy = "^2.0.0"
burnysc2 = "^7.0.1"
black = "^24.1.1"
isort = "^5.13.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.0.6"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}

[tool.poetry.group.semver.dependencies]
python-semantic-release = "7.33.0"

[build-system]
requires = ["poetry-core", "Cython", "numpy", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
generate-setup-file = false
script = 'build.py'

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore:function ham\(\) is deprecated:DeprecationWarning',
]

[tool.coverage.report]
exclude_lines = [
    'if __name__ == "__main__":'
]

[tool.semantic_release]
branch = "main"
version_variable = "cython_extensions/__init__.py:__version__"
version_toml = "pyproject.toml:tool.poetry.version"
version_source = "tag"
commit_version_number = true # required for version_source = "tag"
tag_commit = true
upload_to_pypi = false
upload_to_release = false
hvcs = "github"
commit_message = "{version} [skip ci]" # skip triggering ci pipelines for version commits

[tool.isort]
profile = "black"

